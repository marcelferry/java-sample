<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>br.com.marcelferry</groupId>
	<artifactId>java-sample</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
    <description>Getting started with Spring Boot and Docker</description>

	<parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.9.RELEASE</version>
        <relativePath />
    </parent>
    
    <developers>
	    <developer>
	      <name>Marcel Ferry</name>
	      <email>me@marcelferry.com.br</email>
	      <organization>Mythe</organization>
	      <organizationUrl>http://www.marcelferry.com.br/</organizationUrl>
	    </developer>
	  </developers>
    
    <scm>
	    <connection>scm:git:https://github.com/marcelferry/java-sample</connection>
	    <developerConnection>scm:git:https://github.com/marcelferry/java-sample</developerConnection>
	    <url>https://github.com/marcelferry/java-sample</url>
	    <tag>HEAD</tag>
	  </scm>
	  
	  <repositories>
	    <repository>
	      <id>nexus</id>
	      <url>http://localhost:8080/repository/maven-public</url>
	    </repository>
	  </repositories>
	  
	  <distributionManagement>
	    <snapshotRepository>
	      <id>nexus</id>
	      <url>http://localhost:8080/repository/maven-snapshots</url>
	    </snapshotRepository>
	    <repository>
	      <id>nexus</id>
	      <url>http://localhost:8080/repository/maven-releases</url>
	    </repository>
	  </distributionManagement>

	<dependencies>
	
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        
        <!-- Actuator -->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        
        <!-- ServiceMapper -->

        <dependency>
            <groupId>org.modelmapper</groupId>
            <artifactId>modelmapper</artifactId>
            <version>0.7.4</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        
        <!-- Spring Data JPA dependencies -->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <!-- dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency-->
		
		<dependency>
		  <groupId>org.influxdb</groupId>
		  <artifactId>influxdb-java</artifactId>
		  <version>2.10</version>
		</dependency>
        
        <!-- logging -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        
        
        <!-- Adicionar documentação automatizada de Swagger -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.7.0</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-data-rest</artifactId>
			<version>2.7.0</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.7.0</version>
		</dependency>
		
		<dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
		

		<!--  Spring Test dependencies -->        
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>

        <dependency>
            <groupId>org.dbunit</groupId>
            <artifactId>dbunit</artifactId>
            <version>2.4.9</version>
            <scope>test</scope>
        </dependency>
        
        <!-- https://mvnrepository.com/artifact/org.sonarsource.scanner.maven/sonar-maven-plugin -->
		<dependency>
			<groupId>org.sonarsource.scanner.maven</groupId>
			<artifactId>sonar-maven-plugin</artifactId>
			<version>3.2</version>
		</dependency>
		        
	</dependencies>
	
	
	<build>
        <finalName>java-sample</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java-version}</source>
                    <target>${java-version}</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            
             <!-- tag::plugin[] -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>1.3.6</version>
                <executions>
		          <execution>
		            <id>tag-latest</id>
		            <phase>deploy</phase>
		            <goals>
		              <goal>build</goal>
		              <goal>tag</goal>
		              <goal>push</goal>
		            </goals>
		            <configuration>
		              <tag>latest</tag>
		            </configuration>
		          </execution>
		          <execution>
		            <id>tag-version</id>
		            <phase>deploy</phase>
		            <goals>
		              <goal>build</goal>
		              <goal>tag</goal>
		              <goal>push</goal>
		            </goals>
		            <configuration>
		              <tag>${env.BUILD_NUMBER}</tag>
		            </configuration>
		          </execution>
		        </executions>
                <configuration>
                    <repository>${docker.image.prefix}/marcelferry/${project.artifactId}</repository>
                    <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
					<buildArgs>
						<JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
					</buildArgs>
                </configuration>
            </plugin>
            <!-- end::plugin[] -->
            
            <plugin>
			   <groupId>org.apache.maven.plugins</groupId>
			   <artifactId>maven-release-plugin</artifactId>
			   <version>2.5.3</version>
			   <configuration>
			      <tagNameFormat>v@{project.version}</tagNameFormat>
			      <autoVersionSubmodules>true</autoVersionSubmodules>
			   </configuration>
			</plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>${project.artifactId}</artifactId>
                                    <version>${project.version}</version>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

			<plugin>
	            <groupId>org.jacoco</groupId>
	            <artifactId>jacoco-maven-plugin</artifactId>
	            <version>0.8.1</version>
	            <executions>
	                <execution>
	                    <id>default-prepare-agent</id>
	                    <goals>
	                        <goal>prepare-agent</goal>
	                    </goals>
	                </execution>
	                <execution>
	                    <id>default-report</id>
	                    <phase>prepare-package</phase>
	                    <goals>
	                        <goal>report</goal>
	                    </goals>
	                </execution>
	            </executions>
	        </plugin>
	        
	        

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>**/*IntegrationTest.java</exclude>
                        <exclude>**/*LiveTest.java</exclude>
                    </excludes>
                    <systemPropertyVariables>
                        <!-- <provPersistenceTarget>h2</provPersistenceTarget> -->
                    </systemPropertyVariables>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>integration</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <excludes>
                                        <exclude>**/*LiveTest.java</exclude>
                                    </excludes>
                                    <includes>
                                        <include>**/*IntegrationTest.java</include>
                                    </includes>
                                </configuration>
                            </execution>
                        </executions>
                        <configuration>
                            <systemPropertyVariables>
                                <test.mime>json</test.mime>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
			<id>sonar</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- Optional URL to server. Default value is http://localhost:9000 -->
				<sonar.host.url>
				http://localhost:9000
				</sonar.host.url>
			</properties>
		</profile>
    </profiles>
    
    <properties>
	    <docker.image.prefix></docker.image.prefix>
        <java-version>1.8</java-version>
        <tomcat.version>8.5.5</tomcat.version>
        <guava.version>20.0</guava.version>
        <sonar.language>java</sonar.language>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
	
    <name>Java Referencia API Project</name>
</project>
